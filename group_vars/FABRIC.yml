---
# Ansible connectivity definitions
# eAPI connectivity via HTTPS is specified (as opposed to CLI via SSH)
ansible_connection: ansible.netcommon.httpapi
# Specifies that we are indeed using Arista EOS
ansible_network_os: arista.eos.eos
# This user/password must exist on the switches to enable Ansible access
ansible_user: ansible
ansible_password: ansible
# User escalation (to enter enable mode)
ansible_become: true
ansible_become_method: enable
# Use SSL (HTTPS)
ansible_httpapi_use_ssl: true
# Do not try to validate certs
ansible_httpapi_validate_certs: false

# Common AVD group variables
fabric_name: FABRIC

# Define underlay and overlay routing protocol to be used
underlay_routing_protocol: EBGP
overlay_routing_protocol: EBGP

# Enable vlan aware bundles
vxlan_vlan_aware_bundles: false


# Local users
local_users:
  # Define a new user, which is called "ansible"

  admin:
    privilege: 15
    role: network-admin
    sha512_password: "$6$Df86J4/SFMDE3/1K$Hef4KstdoxNDaami37cBquTWOTplC.miMPjXVgQxMe92.e5wxlnXOLlebgPj8Fz1KO0za/RCO7ZIs4Q6Eiq1g1"
  
  cvpadmin:
    privilege: 15
    role: network-admin
    sha512_password: "$6$rZKcbIZ7iWGAWTUM$TCgDn1KcavS0s.OV8lacMTUkxTByfzcGlFlYUWroxYuU7M/9bIodhRO7nXGzMweUxvbk8mJmQl8Bh44cRktUj."
  
  ansible:
    privilege: 15
    role: network-admin
    sha512_password: "$6$Dzu11L7yp9j3nCM9$FSptxMPyIL555OMO.ldnjDXgwZmrfMYwHSr0uznE5Qoqvd9a6UdjiFcJUhGLtvXVZR1r.A/iF5aAt50hf/EK4/"
  
  carlos:
    privilege: 15
    roles: network-admin
    sha512_password: "$6$Dzu11L7yp9j3nCM9$FSptxMPyIL555OMO.ldnjDXgwZmrfMYwHSr0uznE5Qoqvd9a6UdjiFcJUhGLtvXVZR1r.A/iF5aAt50hf/EK4/"

  nomios:
    privilege: 15
    roles: network-admin
    sha512_password: "$6$Dzu11L7yp9j3nCM9$FSptxMPyIL555OMO.ldnjDXgwZmrfMYwHSr0uznE5Qoqvd9a6UdjiFcJUhGLtvXVZR1r.A/iF5aAt50hf/EK4/"


# Cloud Vision server information
cvp_instance_ip: 10.31.100.4
cvp_ingestauth_key: 'telarista'

# Ensures TerminAttr is leveraging the token file instead of the ingestauth key (deprecated, will be fixed in upcoming AVD release)
custom_structured_configuration_daemon_terminattr: 
  cvauth:
    method: token
    key: null
    token_file: "/tmp/token"

# sFlow configuration
sflow:
  sample: 1
  dangerous: true
  # Enable CloudVision Flow Tracker
  destinations:
    127.0.0.1:
  source_interface: Loopback0
  run: true

# dns servers.
name_servers:
  - 100.127.255.118
  - 8.8.8.8


# BGP peer groups passwords
bgp_peer_groups:
  # all passwords set to "arista"
  evpn_overlay_peers:
    password: Q4fqtbqcZ7oQuKfuWtNGRQ==
  ipv4_underlay_peers:
    password: 7x4B4rnJhZB438m9+BrBfQ==
  mlag_ipv4_underlay_peer:
    password: 4b21pAdCvWeAqpcKDFMdWw==

# P2P interfaces MTU, includes VLANs 4093 and 4094 that are over peer-link
# If you're running vEOS-lab or cEOS, you should use MTU of 1500 instead as shown in the following line
# p2p_uplinks_mtu: 1500
p2p_uplinks_mtu: 1500

# Adjust default bfd values
bfd_multihop:
  interval: 7000
  min_rx: 7000
  multiplier: 6


# NTP Servers IP or DNS name, first NTP server will be prefered, and sourced from Managment VRF
custom_structured_configuration_ntp:
  local_interface:
    name: Management1
    vrf: MGMT
  servers:
  - name: 0.nl.pool.ntp.org
    preferred: true
    vrf: MGMT
  - name: 1.nl.pool.ntp.org
    vrf: MGMT


#This is to allow scp directly to the devices
custom_structured_configuration_aaa_authorization:
  exec:
    default: local

#This is to allow management of the switches with ssl
custom_structured_configuration_management_api_http:
  https_ssl_profile: SSL_PROF1
  enable_https: true
  default_services: true
  enable_vrfs:
    MGMT: 

custom_structured_configuration_management_security:
 ssl_profiles:
   - name: SSL_PROF1
     tls_versions: 1.2
     certificate:
       file: capi.pem
       key: capikey.pem

